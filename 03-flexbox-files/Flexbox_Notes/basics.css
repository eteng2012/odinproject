/* Flexbox is way to position and flex elements */
/* Crucial to use inspection in dev tools to fix behavior */
/* Flex = grow/shrink */



/* FLexbox is way to arrange items into row/column */
/* When display is set to flex, the elements will stretch to fill the avaliable space, even if window size changes */

/* Below uses descendant combinator to get all divs in flexbox
.flex-container {
   display: flex; 
}

this selector selects all divs inside of .flex-container 
.flex-container div {
    background: peachpuff;
    border: 4px solid brown;
    height: 100px;
    flex: 1; 
  } 
*/

/* Flexbos is a toolbox of properties, some belong to flex container, some flex items */
/* Flex container = any element with display: flex in it */
/* Flex item = any element living in flex container */
/* Items can be both, causing its flex items to fill the space */

/* Nesting flex containers/items is the primary way to build complex layouts */



/* Growing and Shrinking */

/* In flex items, the flex variable is shorthand for 3 properties */
/* Short for flex-grow, flex-shrink, and flex-basis */
/* Flex = 1 is flex-grow and flex-shrink = 1, flex-basis = 0 */

/* Flex-grow expects single number, number tells how much to grow */
/* Setting larger number means that that box will grow wider than the others */

/* Flex-shrink is the same but used if the flex container is smaller than the combined flex items */
/* Defaults to 1, 0 means no shrink */

/* The value for width is the one that is changed when changing size */

/* Flex-basis sets initial size of flex item, it is the starting baseline for grow/shrink */
/* Defaults to 0% if use flex: 1, meaning item width ignored. Setting to auto causes item to check for width declaration */
/* Without changing anything, defaults to auto */
/* Can use flex: auto to have flex: 1 1 auto */

/* Generally, use flex: 1 for even growth and flex-shrink: 0 to stop shrink */



/* Axes */
/* Flexbox can work either horizontal or vertical */
/* Can set variable flex-direction to be row for horizontal or column */
/* Defaults to row*/
/* Regardless of direction, flex containers have main and cross axis */
/* Usually, row is main axis horizontal, column is vertical */

/* If flex-basis = 0, column direction, the div containers would start at 0 height */
/* Therefore, the flex container has a height of 0, so the flex items do to */
/* Using auto causes the code to check the given height */

/* When change direction to vertical, flex-basis refers to height instead of width */
/* Div containers width default is the length of the page, not 0 */



/* Alignment */
/* These variables need to be set in the flex container, not flex item */
/* justify-content variable aligns items across main axis */
/* Setting it to space-between will space out the elements, center will group them to the center */
/* Default is left */
/* align-items changes items across cross axis */
/* Based on main/cross axis, so their behavior changed when change flex-direction */

/* Gap property adds specified space between flex items */