/* CSS only does what we tell it to do except for the default style of browsers */
/* Broswer default style can vary and cause elements to make big gap and are what make buttons look as they do */
/* Unexpected behavior is usually from these default styles or misunderstanding property/cascade *



/* Cascade determines which rules are applied to HTML, made of 3 factors */

/* Specificity */
/* More specific declarations take precedence */
/* Inline most specific -> then selectors  */
/* Selectors: ID most specific -> Class -> Type */
/* Used as tie breaker */
/* When conflict with equal specificity, the one with the most number of selectors involved takes precedence */
/* In the code below, color is red becuase second rule has two selectors (ID and Class), background no conflict
<!-- index.html -->

<div class="main">
  <div class="list" id="subsection">Red text on yellow background</div>
</div>
#subsection {
    background-color: yellow;
    color: blue;
  }
  
  .main #subsection {
   color: red;
  }
*/

/* Universal selector * and combinators +/~/ /> do not add specificity */
/* These two have same specificity even though rule 2 uses child combinator > (like descendant but only for direct children)
.class.second-class {
    font-size: 12px;
  }
  

  .class > .second-class {
    font-size: 24px;
  } 
*/



/* Inheritance */
/* Typography-based elements like font-size/color are inherited by element's descendants */
/* Most other properties not inherited */
/* Direct targeting of element always beats inheritance */
/* Child still blue, parent red
<div id="parent">
  <div class="child"></div>
</div>

#parent {
    color: red;
  }
  
  .child {
    color: blue;
  }
*/



/* Rule Order */
/* If everything else equal, the rule declared last is the one used */